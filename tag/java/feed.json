{
    "version": "https://jsonfeed.org/version/1",
    "title": "Sunyuzero-Blog • All posts by \"java\" tag",
    "description": "",
    "home_page_url": "http://yoursite.com",
    "items": [
        {
            "id": "http://yoursite.com/2020/10/01/java%E7%AC%94%E8%AE%B0/",
            "url": "http://yoursite.com/2020/10/01/java%E7%AC%94%E8%AE%B0/",
            "title": "java学习笔记（一）",
            "date_published": "2020-10-01T05:45:43.000Z",
            "content_html": "<center><font face=\"黑体\" size=8> java基本概念 </font></center>\n\n<h2 id=\"JVM-JRE与JDK\"><a href=\"#JVM-JRE与JDK\" class=\"headerlink\" title=\"JVM,JRE与JDK\"></a>JVM,JRE与JDK</h2><p>java语言有一个非常显著的特征就是跨平台性，无论在什么操作系统上，java程序都能够运行，这就得益于java的JVM。</p>\n<ul>\n<li>JVM<br>&emsp;java虚拟机，简称JVM(java virtual machine），是运行java程序的假想计算机，是java程序的运行环境，我们编写的java代码，都运行在JVM上。<br>&emsp;JVM为什么能使java具有跨平台性呢？原因就在于每个操作系统都具有一个不同的JVM，这些JVM充当了java程序与操作系统之间的中介，java程序直接运行在JVM中，形成的字节码在转运到操作系统，使得java程序在不同平台不需要重新编译，具有跨平台性。<div align=center><img src=\"https://cdn.jsdelivr.net/gh/sunyuzero/cdn/java/java1.png\" width=600></div></li>\n<li>JRE与JDK<br>JRE(Java Runtime Environment），是java程序运行时所需的环境，包括JVM和运行时所需要的核心类库，如果只需要运行java程序的话，那么只需要JRE即可。<br>JDK(Java Development Kit），是java程序开发的工具包，包括JRE和开发人员使用的工具，如果需要开发java程序，那么就需要安装JDK了。<br>这三者的关系是JDK&gt;JRE&gt;JVM，如下图所示<div align=center><img src=\"https://cdn.jsdelivr.net/gh/sunyuzero/cdn/java/java2.png\" width=600></div>\n## 用cmd运行java程序\n首先将cmd定位在java程序所在的文件夹中，然后依次使用javac命令和java命令，javac是对java程序进行编译成class字节码，java命令则是运行编译好的class文件，具体操作如下图所示，其中Test.java是我已经编写好的程序\n<div align=center><img src=\"https://cdn.jsdelivr.net/gh/sunyuzero/cdn/java/java3.png\" width=600></div>\n## java程序的注释\njava程序的注释与c++类似，有2种注释方法：单行注释和多行注释\n单行注释：//注释内容，//之后的内容将被计算机忽略\n多行注释：/* 注释内容，/* */之间的内容将被计算机忽略，可以跨行 */ \n\n</li>\n</ul>\n<h2 id=\"java关键字和标识符的命名规范\"><a href=\"#java关键字和标识符的命名规范\" class=\"headerlink\" title=\"java关键字和标识符的命名规范\"></a>java关键字和标识符的命名规范</h2><p>&emsp;和c++语言类似，java也有预先定义的关键字，这些关键字都是全小写，都有特定含义，变量名和类名等都不能与关键字相同。java区分大小写，所以，命名时可以使用标识符的大写，但不建议。<br>&emsp;标识符就是我们自己定义的内容的名称，标识符可以包含英文字母，数字，美元符号$和下划线_,但标识符不能以数字开头<br>建议标识符的命名规范：</p>\n<ul>\n<li>类名规范：首字母大写，后面每个单词的首字母大写（大驼峰式）</li>\n<li>变量名规范：首字母小写，后面每个单词首字母大写（小驼峰式）</li>\n<li>方法名规范：同变量名</li>\n</ul>\n<h2 id=\"常量与变量\"><a href=\"#常量与变量\" class=\"headerlink\" title=\"常量与变量\"></a>常量与变量</h2><p><font face=\"黑体\" size=4>常量分为字符串常量，整数常量，浮点数常量，字符常量，布尔常量，空常量，用const修饰</font><br>字符串常量：String，以’\\0’结束，如”abc”,”123”,占n+1个字节，其中n为组成字符串的字符个数。<br>整数常量：short（2字节），int（4字节），long（8字节）<br>浮点数常量：float（4字节），double（8字节）<br>字符常量：char（1字节）<br>布尔常量：bool（1字节）<br>空常量：null（0字节）<br><font face=\"黑体\" size=4>变量，即可以改变的常量，没有const修饰的常量，其类型与常量相同</font><br>变量的使用注意事项：</p>\n<ul>\n<li>如果创建多个变量，变量名不可以重复</li>\n<li>对于float和long类型，字母后缀的F和L不要去掉</li>\n<li>如果使用byte和short类型的变量，右侧的数据值不要超过左侧类型的范围</li>\n<li>一定要对变量赋值后才能使用</li>\n<li>变量使用不能超过作用域<h2 id=\"数据类型转换\"><a href=\"#数据类型转换\" class=\"headerlink\" title=\"数据类型转换\"></a>数据类型转换</h2></li>\n<li>自动类型转换，数据类型从小到大，将会自动发生类型转换。</li>\n<li>强制类型转换，当数据类型从大到小，则需要强制转换，不能自动完成,可能会发生精度损失<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//自动转换</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a=<span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> b=a;  <span class=\"comment\">//从int到long，自动转换</span></span><br><span class=\"line\"><span class=\"keyword\">float</span> c=<span class=\"number\">0.1</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> d=c;  <span class=\"comment\">//从float到double，自动转换</span></span><br><span class=\"line\"><span class=\"comment\">//强制转换</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> num = <span class=\"number\">100L</span>; <span class=\"comment\">//会报错，int无法自动转换为long</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> num = (<span class=\"keyword\">int</span>)<span class=\"number\">100L</span>;  <span class=\"comment\">//正确，实现了强制转换</span></span><br><span class=\"line\"><span class=\"keyword\">char</span> s=<span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">a=(<span class=\"keyword\">int</span>)s;   <span class=\"comment\">//正确，将字符串强制转化成int整数,将会输出a的ASCII码</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"ASCII码表\"><a href=\"#ASCII码表\" class=\"headerlink\" title=\"ASCII码表\"></a>ASCII码表</h2><p>ASCII ((American Standard Code for Information Interchange): 美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统标准，ASCII 码也叫基础ASCII码，使用7 位二进制数（剩下的1位二进制为0）来表示所有的大写和小写字母，数字0 到9、标点符号，以及在美式英语中使用的特殊控制字符</p>\n<div align=center><img src=\"https://cdn.jsdelivr.net/gh/sunyuzero/cdn/java/java4.jpg\" width=600></div>\n\n\n",
            "tags": [
                "blog",
                "java学习",
                "java"
            ]
        }
    ]
}