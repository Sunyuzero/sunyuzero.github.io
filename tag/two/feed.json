{
    "version": "https://jsonfeed.org/version/1",
    "title": "Sunyuzero-Blog • All posts by \"two\" tag",
    "description": "",
    "home_page_url": "http://yoursite.com",
    "items": [
        {
            "id": "http://yoursite.com/2020/08/30/%E9%93%BE%E8%A1%A8%E5%AD%A6%E4%B9%A0/",
            "url": "http://yoursite.com/2020/08/30/%E9%93%BE%E8%A1%A8%E5%AD%A6%E4%B9%A0/",
            "title": "链表学习",
            "date_published": "2020-08-30T05:45:43.000Z",
            "content_html": "<center><font face=\"黑体\" size=8> 链表学习 </font></center>\n\n<a id=\"more\"></a>\n\n<h2 id=\"链表结构\"><a href=\"#链表结构\" class=\"headerlink\" title=\"链表结构\"></a>链表结构</h2><p>1.创建结构体</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.建立链表</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">head</span>,*<span class=\"title\">p</span>,*<span class=\"title\">q</span>;</span></span><br><span class=\"line\">head=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> x;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(~<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,x))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    p=(struct node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct node));</span><br><span class=\"line\">    p-&gt;data=x;</span><br><span class=\"line\">    p-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(head==<span class=\"literal\">NULL</span>) head=p;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> q-&gt;next=p;</span><br><span class=\"line\">    q=p;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3.输出链表</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">t</span>;</span></span><br><span class=\"line\">t=head;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(t!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,t-&gt;data);</span><br><span class=\"line\">    t=t-&gt;next;</span><br><span class=\"line\">&#125;        </span><br></pre></td></tr></table></figure>\n<p>4.插入链表</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">r</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a;</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a);</span><br><span class=\"line\"><span class=\"keyword\">while</span>(r!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(r-&gt;next==<span class=\"literal\">NULL</span>||r-&gt;data&gt;a)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p=(struct node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct node));</span><br><span class=\"line\">        p-&gt;next=r-&gt;next;</span><br><span class=\"line\">        p-&gt;data=a;</span><br><span class=\"line\">        r-&gt;next=p;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    r=r-&gt;next;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5.删除链表</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">f</span>;</span></span><br><span class=\"line\">f=head;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(f!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(f);</span><br><span class=\"line\">    f=f-&gt;next;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"模拟链表\"><a href=\"#模拟链表\" class=\"headerlink\" title=\"模拟链表\"></a>模拟链表</h2><p>&emsp;模拟链表，即通过2个数组来模拟动态链表，一个数组存放数据，另一个数组记录数据的位置。<br>1.模拟链表结构</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> data[<span class=\"number\">100</span>],right[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;data[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i!=n) right[i]=i+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> right[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>2.插入数据操作</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> x;<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x);</span><br><span class=\"line\"><span class=\"keyword\">int</span> t=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(t!=<span class=\"number\">0</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(data[right[t]&gt;data[n])</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        data[n+<span class=\"number\">1</span>]=x;</span><br><span class=\"line\">        right[t]=n+<span class=\"number\">1</span>;</span><br><span class=\"line\">        right[n+<span class=\"number\">1</span>]=t+<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    t=right[t];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "blog",
                "TWO",
                "学习经验"
            ]
        },
        {
            "id": "http://yoursite.com/2020/08/22/%E8%BD%A6%E9%80%94%E9%A3%98%E6%89%AC%E7%9A%84%E6%80%9D%E7%BB%AA/",
            "url": "http://yoursite.com/2020/08/22/%E8%BD%A6%E9%80%94%E9%A3%98%E6%89%AC%E7%9A%84%E6%80%9D%E7%BB%AA/",
            "title": "车途飘扬的思绪",
            "date_published": "2020-08-22T08:54:43.000Z",
            "content_html": "<center><font face=\"黑体\" size=6> 一路旅途，万千思绪</font></center>\n\n<a id=\"more\"></a>\n\n<p>&emsp;<font size=3>在这漫长高铁的旅途中，思绪繁杂。闭上眼睛，聆听着隧道中的轰鸣声，车厢内的低语声，所有的声音都那么的清晰，清晰到一言一语都似在耳边，又那么模糊，模糊到一字一句我都我都无法明白。</p>\n<p>&emsp;于是乎，我睁开眼，看向了窗外，思绪跟随外面的山山水水飞跃，想到了昨天的相聚，了结了一年未见的遗憾，她依旧似从前，又想到了未来的人生，哈我似乎一想到她就想到了未来。我以为时间能磨平一切，没想到一看见她依旧无法抑制心中的悸动。自信在她面前似乎瞬间崩溃，取而代之的罕见的自卑，我小心翼翼地努力表现好自己，偷偷地瞟向她的脸庞，在她的目光转向我时，闪避似乎已成本能。</p>\n<p>&emsp;离别之后，她的回眸一笑，我心绪澎湃，我不断回头，看着她的身影，我越走越快。自嘲？可能有吧，但更多的是一种欲望，一种想变优秀的欲望。</p>\n<p>&emsp;我很庆幸很碰到很多志同道合的朋友，也很庆幸结实一个大佬，不断带着我学习，带着我前进，回到学校，一起奋斗。</p>\n<p>&emsp;列车将要到站，武大，我来了，未来，我也来了！！！<br></font></p>\n<br/>\n\n<div align=center><img src=\"https://cdn.jsdelivr.net/gh/sunyuzero/cdn/img/cover4.jpg\" width=600></div>",
            "tags": [
                "blog",
                "心路历程",
                "TWO"
            ]
        }
    ]
}