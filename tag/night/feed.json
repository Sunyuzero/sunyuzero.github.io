{
    "version": "https://jsonfeed.org/version/1",
    "title": "Sunyuzero-Blog • All posts by \"night\" tag",
    "description": "",
    "home_page_url": "http://yoursite.com",
    "items": [
        {
            "id": "http://yoursite.com/2020/09/23/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/",
            "url": "http://yoursite.com/2020/09/23/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/",
            "title": "算法学习",
            "date_published": "2020-09-23T05:45:43.000Z",
            "content_html": "<center><font face=\"黑体\" size=8> 算法学习 </font></center>\n\n<h1 id=\"getchar和putchar\"><a href=\"#getchar和putchar\" class=\"headerlink\" title=\"getchar和putchar\"></a>getchar和putchar</h1><p>getchar用于输入单个字符，putchar用于输出单个字符</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> c;</span><br><span class=\"line\">c=getchar();</span><br><span class=\"line\"><span class=\"built_in\">putchar</span>(c);</span><br></pre></td></tr></table></figure>\n<h1 id=\"常见的math函数\"><a href=\"#常见的math函数\" class=\"headerlink\" title=\"常见的math函数\"></a>常见的math函数</h1><p>使用math内置函数需要添加头文件<cmath></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">fabs</span>(<span class=\"keyword\">double</span> x);  <span class=\"comment\">//取x的绝对值</span></span><br><span class=\"line\"><span class=\"built_in\">floor</span>(<span class=\"keyword\">double</span> x);  <span class=\"comment\">//向上取整</span></span><br><span class=\"line\"><span class=\"built_in\">ceil</span>(<span class=\"keyword\">double</span> x);  <span class=\"comment\">//向下取整</span></span><br><span class=\"line\"><span class=\"built_in\">pow</span>(<span class=\"keyword\">double</span> r,<span class=\"keyword\">double</span> p) <span class=\"comment\">//返回r的p次方</span></span><br><span class=\"line\"><span class=\"built_in\">sqrt</span>(<span class=\"keyword\">double</span> x);  <span class=\"comment\">//返回x的算术平方根</span></span><br><span class=\"line\"><span class=\"built_in\">log</span>(<span class=\"keyword\">double</span> x);  <span class=\"comment\">//返回ln(x)</span></span><br><span class=\"line\"><span class=\"built_in\">sin</span>(<span class=\"keyword\">double</span> x);  <span class=\"comment\">//返回正弦值，要求x为弧度制</span></span><br><span class=\"line\"><span class=\"built_in\">acos</span>(<span class=\"keyword\">double</span> x);  <span class=\"comment\">//返回反余弦值，pi=acos(-1);</span></span><br><span class=\"line\">round(<span class=\"keyword\">double</span> x);  <span class=\"comment\">//对x进行四舍五入取整</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"memset函数\"><a href=\"#memset函数\" class=\"headerlink\" title=\"memset函数\"></a>memset函数</h1><p>memset用于对数组中的每一个元素赋予相同的值（0或-1）,下面的这个函数即是对数组a的元素全部赋予0的操作<br>memset(a,0,sizeof(a));</p>\n<h1 id=\"对字符数组的输入输出\"><a href=\"#对字符数组的输入输出\" class=\"headerlink\" title=\"对字符数组的输入输出\"></a>对字符数组的输入输出</h1><h2 id=\"scanf和printf\"><a href=\"#scanf和printf\" class=\"headerlink\" title=\"scanf和printf\"></a>scanf和printf</h2><p>scanf(“%c”,&amp;c)用于输入单个字符,scanf(“%s”,s)用于输入字符数组，%s识别空格作为字符串的结尾</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,str);   <span class=\"comment\">//输入TAT TAT</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s&quot;</span>,str);  <span class=\"comment\">//输出TAT</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"gets和puts\"><a href=\"#gets和puts\" class=\"headerlink\" title=\"gets和puts\"></a>gets和puts</h2><p>gets用于输入一行字符串，以’\\n’作为识别结尾,puts用于输出一行字符串并自动换行</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">gets(str);</span><br><span class=\"line\"><span class=\"built_in\">puts</span>(str);</span><br></pre></td></tr></table></figure>\n<h1 id=\"cstring的使用\"><a href=\"#cstring的使用\" class=\"headerlink\" title=\"cstring的使用\"></a>cstring的使用</h1><p>使用string类的内置函数需要包含头文件<cstring></p>\n<h2 id=\"strlen\"><a href=\"#strlen\" class=\"headerlink\" title=\"strlen()\"></a>strlen()</h2><p>strlen()函数用于获取字符串的长度</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">gets(str)</span><br><span class=\"line\"><span class=\"keyword\">int</span> len=<span class=\"built_in\">strlen</span>(str);  <span class=\"comment\">//获取字符串的长度</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"strcmp\"><a href=\"#strcmp\" class=\"headerlink\" title=\"strcmp()\"></a>strcmp()</h2><p>strcmp(str1,str2)函数用于比较2个字符串的大小（按照字典序），返回一个整数，若str1&gt;str2，则返回一个正整数，若str1&lt;str2，则返回一个负整数,若str1=str2,则返回0。示例如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> str1[<span class=\"number\">10</span>],str2[<span class=\"number\">10</span>];</span><br><span class=\"line\">gets(str1);    <span class=\"comment\">//Dear</span></span><br><span class=\"line\">gets(str2);       <span class=\"comment\">//Cat</span></span><br><span class=\"line\"><span class=\"built_in\">strcmp</span>(str1,str2)  <span class=\"comment\">//返回一个正整数</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"strcpy\"><a href=\"#strcpy\" class=\"headerlink\" title=\"strcpy()\"></a>strcpy()</h2><p>strcpy(str1,str2)函数可以把str2复制给str1</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> str1[<span class=\"number\">50</span>],str2[<span class=\"number\">50</span>];</span><br><span class=\"line\">gets(str1);   <span class=\"comment\">//Hello</span></span><br><span class=\"line\">gets(str2);   <span class=\"comment\">//World</span></span><br><span class=\"line\"><span class=\"built_in\">strcpy</span>(str1,str2);</span><br><span class=\"line\"><span class=\"built_in\">puts</span>(str1);   <span class=\"comment\">//World</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"strcat\"><a href=\"#strcat\" class=\"headerlink\" title=\"strcat()\"></a>strcat()</h2><p>strcat(str1,str2)函数可以将str2接到str1后面</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> str1[<span class=\"number\">50</span>],str2[<span class=\"number\">50</span>];</span><br><span class=\"line\">gets(str1);   <span class=\"comment\">//Hello</span></span><br><span class=\"line\">gets(str2);   <span class=\"comment\">//World</span></span><br><span class=\"line\"><span class=\"built_in\">strcat</span>(str1,str2);</span><br><span class=\"line\"><span class=\"built_in\">puts</span>(str1);   <span class=\"comment\">//HelloWorld</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"sscanf和sprintf\"><a href=\"#sscanf和sprintf\" class=\"headerlink\" title=\"sscanf和sprintf\"></a>sscanf和sprintf</h1><p>sscanf和sprintf是处理字符串的利器，可以理解为string+scanf(printf),其基本格式为：sscanf(str,”%d”,&amp;n);sprinf(str,”%d”,n);</p>\n<h2 id=\"简单用法\"><a href=\"#简单用法\" class=\"headerlink\" title=\"简单用法\"></a>简单用法</h2><p>sscanf的用法是把字符数组str里的内容以”%d”的格式写入n中，而sprintf是把n的内容写入str中，示例如下</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> str[<span class=\"number\">50</span>],str1[<span class=\"number\">50</span>]=<span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m=<span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"built_in\">sscanf</span>(str1,<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\"><span class=\"built_in\">sprintf</span>(str,<span class=\"string\">&quot;%d&quot;</span>,m);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n%s&quot;</span>,n,str);   <span class=\"comment\">//n=123,str=&#x27;100&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"进阶用法\"><a href=\"#进阶用法\" class=\"headerlink\" title=\"进阶用法\"></a>进阶用法</h2><p>不仅如此，sscanf和sprintf还可以进行复杂的输入输出，如下列代码所示</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> n;<span class=\"keyword\">double</span> db;</span><br><span class=\"line\"><span class=\"keyword\">char</span> str[<span class=\"number\">50</span>],str1[<span class=\"number\">50</span>]=<span class=\"string\">&quot;2020:3.14,sscanf&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">sscanf</span>(str1,<span class=\"string\">&quot;%d:%lf,%s&quot;</span>,&amp;n,&amp;db,&amp;str);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n%.2f\\n%s\\n&quot;</span>,n,db,str);    <span class=\"comment\">//n=2020,db=3.14,str=sscanf</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> b=<span class=\"number\">2020</span>;<span class=\"keyword\">double</span> db=<span class=\"number\">3.14</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> str[<span class=\"number\">100</span>],str1[<span class=\"number\">100</span>]=<span class=\"string\">&quot;sprintf&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">sprintf</span>(str,<span class=\"string\">&quot;%d:%.2f,%s&quot;</span>,b,db,str1);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s&quot;</span>,str);     <span class=\"comment\">//str=2020:3.14,sprintf</span></span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "blog",
                "学习经验",
                "NIGHT"
            ]
        }
    ]
}