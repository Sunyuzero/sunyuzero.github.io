{
    "version": "https://jsonfeed.org/version/1",
    "title": "Sunyuzero-Blog • All posts by \"学习经验\" tag",
    "description": "",
    "home_page_url": "http://yoursite.com",
    "items": [
        {
            "id": "http://yoursite.com/2020/09/01/%E6%9A%B4%E5%8A%9B%E6%9E%9A%E4%B8%BE/",
            "url": "http://yoursite.com/2020/09/01/%E6%9A%B4%E5%8A%9B%E6%9E%9A%E4%B8%BE/",
            "title": "暴力枚举",
            "date_published": "2020-09-01T10:45:43.000Z",
            "content_html": "<center><font face=\"黑体\" size=7> 暴力枚举学习 </font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"火柴棍游戏\"><a href=\"#火柴棍游戏\" class=\"headerlink\" title=\"火柴棍游戏\"></a>火柴棍游戏</h1><h2 id=\"题目大意\"><a href=\"#题目大意\" class=\"headerlink\" title=\"题目大意\"></a>题目大意</h2><p>&emsp;给定确定的n(n&lt;=24)根火柴，要求全部使用并摆出A+B=C的等式，其中A,B,C均为整数，求问共有多少种摆法。</p>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>&emsp;将0-9这10个数字所需要的火柴棍个数记录在数组当中，通过暴力枚举来找出其中符合的个数。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">int</span> f[<span class=\"number\">10</span>]=&#123;<span class=\"number\">6</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">6</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">fn</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x&gt;=<span class=\"number\">1000</span>) <span class=\"keyword\">return</span> f[(x/<span class=\"number\">1000</span>)]+f[x/<span class=\"number\">100</span>%<span class=\"number\">10</span>]+f[x/<span class=\"number\">10</span>%<span class=\"number\">10</span>]+f[x%<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(x&gt;=<span class=\"number\">100</span>&amp;&amp;x&lt;<span class=\"number\">1000</span>) <span class=\"keyword\">return</span> f[x/<span class=\"number\">100</span>]+f[x/<span class=\"number\">10</span>%<span class=\"number\">10</span>]+f[x%<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(x&gt;=<span class=\"number\">10</span>&amp;&amp;x&lt;<span class=\"number\">100</span>) <span class=\"keyword\">return</span> f[x/<span class=\"number\">10</span>]+f[x%<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> f[x];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,<span class=\"built_in\">abs</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=<span class=\"number\">1111</span>;i++)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=<span class=\"number\">1111</span>;j++)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(fn(i)+fn(j)+fn(i+j)==n<span class=\"number\">-4</span>) <span class=\"built_in\">abs</span>++;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s%d%s&quot;</span>,<span class=\"string\">&quot;情况共有&quot;</span>,<span class=\"built_in\">abs</span>,<span class=\"string\">&quot;种&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "blog",
                "学习经验",
                "THREE"
            ]
        },
        {
            "id": "http://yoursite.com/2020/08/30/%E9%93%BE%E8%A1%A8%E5%AD%A6%E4%B9%A0/",
            "url": "http://yoursite.com/2020/08/30/%E9%93%BE%E8%A1%A8%E5%AD%A6%E4%B9%A0/",
            "title": "链表学习",
            "date_published": "2020-08-30T05:45:43.000Z",
            "content_html": "<center><font face=\"黑体\" size=8> 链表学习 </font></center>\n\n<a id=\"more\"></a>\n\n<h2 id=\"链表结构\"><a href=\"#链表结构\" class=\"headerlink\" title=\"链表结构\"></a>链表结构</h2><p>1.创建结构体</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.建立链表</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">head</span>,*<span class=\"title\">p</span>,*<span class=\"title\">q</span>;</span></span><br><span class=\"line\">head=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> x;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(~<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,x))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    p=(struct node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct node));</span><br><span class=\"line\">    p-&gt;data=x;</span><br><span class=\"line\">    p-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(head==<span class=\"literal\">NULL</span>) head=p;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> q-&gt;next=p;</span><br><span class=\"line\">    q=p;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3.输出链表</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">t</span>;</span></span><br><span class=\"line\">t=head;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(t!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,t-&gt;data);</span><br><span class=\"line\">    t=t-&gt;next;</span><br><span class=\"line\">&#125;        </span><br></pre></td></tr></table></figure>\n<p>4.插入链表</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">r</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a;</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a);</span><br><span class=\"line\"><span class=\"keyword\">while</span>(r!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(r-&gt;next==<span class=\"literal\">NULL</span>||r-&gt;data&gt;a)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p=(struct node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct node));</span><br><span class=\"line\">        p-&gt;next=r-&gt;next;</span><br><span class=\"line\">        p-&gt;data=a;</span><br><span class=\"line\">        r-&gt;next=p;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    r=r-&gt;next;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5.删除链表</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">f</span>;</span></span><br><span class=\"line\">f=head;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(f!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(f);</span><br><span class=\"line\">    f=f-&gt;next;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"模拟链表\"><a href=\"#模拟链表\" class=\"headerlink\" title=\"模拟链表\"></a>模拟链表</h2><p>&emsp;模拟链表，即通过2个数组来模拟动态链表，一个数组存放数据，另一个数组记录数据的位置。<br>1.模拟链表结构</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> data[<span class=\"number\">100</span>],right[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;data[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i!=n) right[i]=i+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> right[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>2.插入数据操作</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> x;<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x);</span><br><span class=\"line\"><span class=\"keyword\">int</span> t=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(t!=<span class=\"number\">0</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(data[right[t]&gt;data[n])</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        data[n+<span class=\"number\">1</span>]=x;</span><br><span class=\"line\">        right[t]=n+<span class=\"number\">1</span>;</span><br><span class=\"line\">        right[n+<span class=\"number\">1</span>]=t+<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    t=right[t];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "blog",
                "TWO",
                "学习经验"
            ]
        },
        {
            "id": "http://yoursite.com/2020/08/27/%E5%88%9D%E8%AF%86%E9%98%9F%E5%88%97%E5%92%8C%E6%A0%88/",
            "url": "http://yoursite.com/2020/08/27/%E5%88%9D%E8%AF%86%E9%98%9F%E5%88%97%E5%92%8C%E6%A0%88/",
            "title": "初识队列和栈",
            "date_published": "2020-08-27T10:45:43.000Z",
            "content_html": "<center><font face=\"黑体\" size=10> 初识队列和栈 </font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h1><p>&emsp;<font size=3>队列，作为一种比较简单的数据结构，其在算法中有着非常多的应用。其类似于一条单行道，先进先出，后进后出，每次需要记录头指针和尾指针。接下来我将从一个简单的例子出发渗透队列的思想。</p>\n<h2 id=\"题目大意\"><a href=\"#题目大意\" class=\"headerlink\" title=\"题目大意\"></a>题目大意</h2><p>&emsp;n 个人围成一圈，从第一个人开始报数,数到m的人出列，再由下一个人重新从1开始报数，数到m的人再出圈，依次类推，直到所有的人都出圈，输出依次出圈人的编号。</p>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>&emsp;构建一个含有n个元素的队列，进行n次循环，在每次循环中将队列前m-1个元素依次放置队尾，然后将第m个元素出队并输出，这样每次循环之后形成新的队列重复以上操作即可。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">1000005</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> head=<span class=\"number\">1</span>,tail=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        a[++tail]=i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(tail&gt;=head)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;m;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            a[++tail]=a[head++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,a[head++]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"栈\"><a href=\"#栈\" class=\"headerlink\" title=\"栈\"></a>栈</h1><p>&emsp;栈，原理类似于队列，如同一个死胡同，出口和入口为同一个，先进后出，每次只需记录尾指针即可。话不多说，再看一个小例子来了解栈的应用。</p>\n<h2 id=\"题目大意-1\"><a href=\"#题目大意-1\" class=\"headerlink\" title=\"题目大意\"></a>题目大意</h2><p>&emsp;判断一个数是否为回文数</p>\n<h2 id=\"解题思路-1\"><a href=\"#解题思路-1\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>&emsp;直接利用栈存储前一半的字符串，然后将后一半字符串与栈中字符对比判断即可</p>\n<h2 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">char</span> t[<span class=\"number\">10005</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> top=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> a[<span class=\"number\">100</span>];</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> dg=<span class=\"number\">0</span>;</span><br><span class=\"line\">    gets(a);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len=<span class=\"built_in\">strlen</span>(a);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mid=len/<span class=\"number\">2</span><span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=mid;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        t[++top]=a[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(len%<span class=\"number\">2</span>==<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=mid+<span class=\"number\">1</span>;i&lt;len;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t[top--]!=a[i])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dg=<span class=\"number\">1</span>;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">             &#125; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=mid+<span class=\"number\">2</span>;i&lt;len;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t[top--]!=a[i])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dg=<span class=\"number\">1</span>;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dg) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;不是回文数&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;是回文数&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"混合运用\"><a href=\"#混合运用\" class=\"headerlink\" title=\"混合运用\"></a>混合运用</h1><p>&emsp;接下来就轮到队列和栈的混合双打了,没错，就是传说中的经典纸牌游戏，在我们家乡俗称“拣goushi”</p>\n<h2 id=\"题目大意-2\"><a href=\"#题目大意-2\" class=\"headerlink\" title=\"题目大意\"></a>题目大意</h2><p>&emsp;双方按照发牌的原本顺序轮流出牌放置桌面，出牌时，若一方打出的牌与桌面上某张牌相同，则可取走这两张牌之间的所有牌（包括这两张）依次放置牌的最后，当一方牌全出完时则失败，</p>\n<h2 id=\"解题思路-2\"><a href=\"#解题思路-2\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>&emsp;开始时双方手中的牌可用队列存储，出牌即使出队，赢牌则是入队。而桌面上的牌则可用栈存储，每打出一张牌即入栈。最后判断队列是否为空即可。</p>\n<h2 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">queue</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data[<span class=\"number\">1000</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> head;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> tail;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">stack</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data[<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> top;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">queue</span> <span class=\"title\">q1</span>, <span class=\"title\">q2</span>;</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">stack</span> <span class=\"title\">s</span>;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> book[<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, t;</span><br><span class=\"line\">    q1.head = <span class=\"number\">1</span>; q1.tail = <span class=\"number\">1</span>;</span><br><span class=\"line\">    q2.head = <span class=\"number\">1</span>; q2.tail = <span class=\"number\">1</span>;</span><br><span class=\"line\">    s.top = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        book[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">6</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;q1.data[q1.tail]);</span><br><span class=\"line\">        q1.tail++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">6</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;q2.data[q2.tail]);</span><br><span class=\"line\">        q2.tail++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (q1.head &lt; q1.tail &amp;&amp; q2.head &lt; q2.tail)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        t = q1.data[q1.head];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (book[t] == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            q1.head++;</span><br><span class=\"line\">            s.top++;</span><br><span class=\"line\">            s.data[s.top] = t;</span><br><span class=\"line\">            book[t] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            q1.head++;</span><br><span class=\"line\">            q1.data[q1.tail] = t;</span><br><span class=\"line\">            q1.tail++;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (s.data[s.top] != t)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                book[s.data[s.top]] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                q1.data[q1.tail] = s.data[s.top];</span><br><span class=\"line\">                q1.tail++;</span><br><span class=\"line\">                s.top--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            book[s.data[s.top]] = <span class=\"number\">0</span>;</span><br><span class=\"line\">            q1.data[q1.tail] = s.data[s.top];</span><br><span class=\"line\">            q1.tail++;</span><br><span class=\"line\">            s.top--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (q1.head == q1.tail) <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        t= q2.data[q2.head];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (book[t] == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            q2.head++;</span><br><span class=\"line\">            s.top++;</span><br><span class=\"line\">            s.data[s.top] = t;</span><br><span class=\"line\">            book[t] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            q2.head++;</span><br><span class=\"line\">            q2.data[q2.tail] = t;</span><br><span class=\"line\">            q2.tail++;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (s.data[s.top] != t)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                book[s.data[s.top]] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                q2.data[q2.tail] = s.data[s.top];</span><br><span class=\"line\">                q2.tail++;</span><br><span class=\"line\">                s.top--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            book[s.data[s.top]] = <span class=\"number\">0</span>;</span><br><span class=\"line\">            q2.data[q2.tail] = s.data[s.top];</span><br><span class=\"line\">            q2.tail++;</span><br><span class=\"line\">            s.top--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (q2.head == q2.tail) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (q1.head == q1.tail) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;B WIN&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;A WIN&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n</font>\n\n<br/>\n\n",
            "tags": [
                "blog",
                "ONE",
                "学习经验"
            ]
        }
    ]
}