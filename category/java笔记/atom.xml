<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://yoursite.com</id>
    <title>Sunyuzero-Blog • Posts by &#34;java笔记&#34; category</title>
    <link href="http://yoursite.com" />
    <updated>2020-10-05T05:45:43.000Z</updated>
    <category term="blog" />
    <category term="心路历程" />
    <category term="学习经验" />
    <category term="比赛" />
    <category term="java学习" />
    <category term="数据结构" />
    <category term="java" />
    <category term="BFS" />
    <category term="机器学习" />
    <category term="算法" />
    <category term="暴力枚举" />
    <category term="DFS" />
    <category term="ONE" />
    <entry>
        <id>http://yoursite.com/2020/10/05/java%E5%AD%A6%E4%B9%A0(%E5%9B%9B)/</id>
        <title>java学习(四)</title>
        <link rel="alternate" href="http://yoursite.com/2020/10/05/java%E5%AD%A6%E4%B9%A0(%E5%9B%9B)/"/>
        <content type="html">&lt;center&gt;&lt;font face=&#34;黑体&#34; size=8&gt; java &lt;/font&gt;&lt;/center&gt;

&lt;h1 id=&#34;数组&#34;&gt;&lt;a href=&#34;#数组&#34; class=&#34;headerlink&#34; title=&#34;数组&#34;&gt;&lt;/a&gt;数组&lt;/h1&gt;&lt;p&gt;定义一个数组类型的变量，使用数组类型“类型[]”，有以下几种创建方法:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;int[] a={1,2,3,4,5};    //根据{}之间的元素个数自动创建&lt;/li&gt;
&lt;li&gt;int[] a=new int{1,2,3,4,5}  //同上&lt;/li&gt;
&lt;li&gt;int[] a=new int[5];a={1,2,3,4,5};    //先创建容量为5的数组，再赋值&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数组的内存&#34;&gt;&lt;a href=&#34;#数组的内存&#34; class=&#34;headerlink&#34; title=&#34;数组的内存&#34;&gt;&lt;/a&gt;数组的内存&lt;/h2&gt;&lt;p&gt;1.当动态创建一个数组时，系统将会在栈区先写入数组名称，然后在堆区开辟空间存放数组元素，其中数组的索引也是存放在栈区的，当你要修改数组元素的值时，你首先将访问栈区的索引，然后这个索引再指向堆区对应的内存，如下图所示:&lt;/p&gt;
&lt;div align=center&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sunyuzero/cdn/java/java7.png&#34; width=600&gt;&lt;/div&gt;

&lt;p&gt;2.当一个数组赋值给另一个数组时：int[] arrayB = arrayA;这时候是将arrayA的地址直接赋值给arrayB了，此时arrayA和arrayB共用一个内存，本质上时同一个数组，其内存分配如下所示：&lt;/p&gt;
&lt;div align=center&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sunyuzero/cdn/java/java8.png&#34; width=600&gt;&lt;/div&gt;

&lt;h2 id=&#34;数组注意事项：&#34;&gt;&lt;a href=&#34;#数组注意事项：&#34; class=&#34;headerlink&#34; title=&#34;数组注意事项：&#34;&gt;&lt;/a&gt;数组注意事项：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;数组所有元素初始化为默认值，整型都是0，浮点型是0.0，布尔型是false；&lt;/li&gt;
&lt;li&gt;要访问数组中的某一个元素，需要使用索引。数组索引从0开始&lt;/li&gt;
&lt;li&gt;可以修改数组中的某一个元素，使用赋值语句&lt;/li&gt;
&lt;li&gt;可以用数组变量.length获取数组大小&lt;/li&gt;
&lt;li&gt;数组是引用类型，在使用索引访问数组元素时，如果索引超出范围，运行时将报错&lt;/li&gt;
&lt;li&gt;直接输出数组名称将会得到数组的首地址&lt;/li&gt;
&lt;li&gt;数组的2个异常：超出数组索引(ArrayIndexOutOfBoundsException),空指针异常(NullPointerException):创建一个空数组时访问数组元素将会出现空指针异常&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数组的遍历使用&#34;&gt;&lt;a href=&#34;#数组的遍历使用&#34; class=&#34;headerlink&#34; title=&#34;数组的遍历使用&#34;&gt;&lt;/a&gt;数组的遍历使用&lt;/h2&gt;&lt;p&gt;1.简单遍历输出&lt;br&gt;由于java提供了获取数组长度的方法（array.length），所以对于数组的遍历非常方便：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] array=&amp;#123;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;i&amp;lt;array.length;i++) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(array[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.查找数组最大值&lt;br&gt;以最大值为例，只需要用一个变量记录首元素，在遍历数组时，每次比较得出最大值更新这个变量即可&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] array=&amp;#123;&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; max=array[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i&amp;lt;array.length;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(max&amp;lt;array[i]) max=array[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;最大值为：&amp;quot;&lt;/span&gt;+max);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="blog" />
        <category term="java学习" />
        <updated>2020-10-05T05:45:43.000Z</updated>
    </entry>
    <entry>
        <id>http://yoursite.com/2020/10/04/java%E5%AD%A6%E4%B9%A0(%E4%B8%89)/</id>
        <title>java学习(三)</title>
        <link rel="alternate" href="http://yoursite.com/2020/10/04/java%E5%AD%A6%E4%B9%A0(%E4%B8%89)/"/>
        <content type="html">&lt;center&gt;&lt;font face=&#34;黑体&#34; size=8&gt; java用法 &lt;/font&gt;&lt;/center&gt;

&lt;h1 id=&#34;java编译器的一些优化&#34;&gt;&lt;a href=&#34;#java编译器的一些优化&#34; class=&#34;headerlink&#34; title=&#34;java编译器的一些优化&#34;&gt;&lt;/a&gt;java编译器的一些优化&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;对于byte，short，char三种类型，如果右侧赋值的数据大小没有超过范围，那么java编译器会自动加上（byte），（short），（char），例如：&lt;br&gt;byte a = 30 &amp;lt;==&amp;gt; byte a = (byte) 30&lt;/li&gt;
&lt;li&gt;但是，当右侧赋值的数据大小超过范围后，java编译器则会直接报错&lt;/li&gt;
&lt;li&gt;java中的加法默认将加数当作int数据类型，所以使用2个short类型的变量相加赋予另一个short类型时，编译器会报错，但是当short类型的右边赋予的是两个常量相加，那么编译器不会报错，而是会直接先将常量相加直接赋予short：&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;short&lt;/span&gt; a=&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;short&lt;/span&gt; b=&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;short&lt;/span&gt; c=a+b;   &lt;span class=&#34;comment&#34;&gt;//会报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;short&lt;/span&gt; c=&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;  &lt;span class=&#34;comment&#34;&gt;//正确&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
报错原因：&lt;div align=center&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sunyuzero/cdn/java/java5.png&#34; width=600&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;方法&#34;&gt;&lt;a href=&#34;#方法&#34; class=&#34;headerlink&#34; title=&#34;方法&#34;&gt;&lt;/a&gt;方法&lt;/h1&gt;&lt;h2 id=&#34;方法的注意事项&#34;&gt;&lt;a href=&#34;#方法的注意事项&#34; class=&#34;headerlink&#34; title=&#34;方法的注意事项&#34;&gt;&lt;/a&gt;方法的注意事项&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;方法必须定义在类中，且不能在方法中再定义方法&lt;/li&gt;
&lt;li&gt;方法定义的前后顺序无所谓&lt;/li&gt;
&lt;li&gt;如果方法有返回值，那么必须加上return返回值，不能没有&lt;/li&gt;
&lt;li&gt;对于void方法，不能return加返回值，只能直接return；&lt;/li&gt;
&lt;li&gt;一个方法可以有多个return语句，但是必须保证能执行的只有一个 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;方法重载&#34;&gt;&lt;a href=&#34;#方法重载&#34; class=&#34;headerlink&#34; title=&#34;方法重载&#34;&gt;&lt;/a&gt;方法重载&lt;/h2&gt;&lt;p&gt;在一个类中，我们可以定义多个方法。如果有一系列方法，它们的功能都是类似的，只有参数有所不同，那么，可以把这一组方法名做成同名方法，这种方法名相同，但各自的参数不同，称为方法重载（Overload），方法重载的目的是，功能类似的方法使用同一名字，更容易记住，因此，调用起来更简单。&lt;br&gt;例如，String类提供了多个重载方法indexOf()，可以查找子串：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;int indexOf(int ch)：根据字符的Unicode码查找；&lt;/li&gt;
&lt;li&gt;int indexOf(String str)：根据字符串查找；&lt;/li&gt;
&lt;li&gt;int indexOf(int ch, int fromIndex)：根据字符查找，但指定起始位置；&lt;/li&gt;
&lt;li&gt;int indexOf(String str, int fromIndex)根据字符串查找，但指定起始位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;重载的注意事项&#34;&gt;&lt;a href=&#34;#重载的注意事项&#34; class=&#34;headerlink&#34; title=&#34;重载的注意事项&#34;&gt;&lt;/a&gt;重载的注意事项&lt;/h3&gt;&lt;p&gt;1.方法的重载与下列因素相关：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数的个数不同&lt;/li&gt;
&lt;li&gt;参数的类型不同&lt;/li&gt;
&lt;li&gt;参数的多类型顺序不同&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; x,&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; x,&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; y,&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; z)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; x,&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; x,&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;puclic &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; x,&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//以上正确，都能构成重载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;2.方法的重载与下列因素无关：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与参数的名称无关&lt;/li&gt;
&lt;li&gt;与方法的返回值类型无关&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; x,&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sun&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a,&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//以上不能构成重载会报错，因为与方法参数的名称无关&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; x,&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; x,&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//以上也不能构成重载会报错，因为与方法的返回类型无关&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


</content>
        <category term="blog" />
        <category term="java学习" />
        <updated>2020-10-04T05:45:43.000Z</updated>
    </entry>
    <entry>
        <id>http://yoursite.com/2020/10/02/java%E7%AC%94%E8%AE%B0(%E4%BA%8C)/</id>
        <title>java学习笔记（二）</title>
        <link rel="alternate" href="http://yoursite.com/2020/10/02/java%E7%AC%94%E8%AE%B0(%E4%BA%8C)/"/>
        <content type="html">&lt;center&gt;&lt;font face=&#34;黑体&#34; size=8&gt; java基本语法 &lt;/font&gt;&lt;/center&gt;

&lt;h1 id=&#34;jshell的使用&#34;&gt;&lt;a href=&#34;#jshell的使用&#34; class=&#34;headerlink&#34; title=&#34;jshell的使用&#34;&gt;&lt;/a&gt;jshell的使用&lt;/h1&gt;&lt;p&gt;jshell是java的交互式运行环境，类似于python的命令行的交互式运行环境，直接在命令提示符中输入jshell进入Java交互环境，之后直接输入一条java语句，便能直接输出语句结果，注意jshell中的语句不用以分号结尾。&lt;/p&gt;
&lt;h1 id=&#34;选择结构&#34;&gt;&lt;a href=&#34;#选择结构&#34; class=&#34;headerlink&#34; title=&#34;选择结构&#34;&gt;&lt;/a&gt;选择结构&lt;/h1&gt;&lt;h2 id=&#34;if语句&#34;&gt;&lt;a href=&#34;#if语句&#34; class=&#34;headerlink&#34; title=&#34;if语句&#34;&gt;&lt;/a&gt;if语句&lt;/h2&gt;&lt;p&gt;在Java程序中，如果要根据条件来决定是否执行某一段代码，就需要if语句。if语句的基本语法是：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//形式1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (条件) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 条件满足时执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//形式2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(条件)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 条件满足时执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 若if条件不满足执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//形式3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(条件&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 条件1满足时执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(条件&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 条件2满足时执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//条件1和2都不满足时执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据if的计算结果（true还是false），JVM决定是否执行if语句块（即花括号{}包含的所有语句）。&lt;/p&gt;
&lt;h2 id=&#34;switch语句&#34;&gt;&lt;a href=&#34;#switch语句&#34; class=&#34;headerlink&#34; title=&#34;switch语句&#34;&gt;&lt;/a&gt;switch语句&lt;/h2&gt;&lt;p&gt;除了if语句外，还有一种条件判断，是根据某个表达式的结果，分别去执行不同的分支。switch语句根据switch (表达式)计算的结果，跳转到匹配的case结果，然后继续执行后续语句，直到遇到break结束执行。switch语句的基本语法是：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; (option) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// option=1时执行语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// option=2时执行语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// option=3时执行语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// option都不符合时执行语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;循环结构&#34;&gt;&lt;a href=&#34;#循环结构&#34; class=&#34;headerlink&#34; title=&#34;循环结构&#34;&gt;&lt;/a&gt;循环结构&lt;/h1&gt;&lt;p&gt;循环语句就是让计算机根据条件做循环计算，在条件满足时继续循环，条件不满足时退出循环。&lt;/p&gt;
&lt;h2 id=&#34;while循环&#34;&gt;&lt;a href=&#34;#while循环&#34; class=&#34;headerlink&#34; title=&#34;while循环&#34;&gt;&lt;/a&gt;while循环&lt;/h2&gt;&lt;p&gt;while循环在每次循环开始前，首先判断条件是否成立。如果计算结果为true，就把循环体内的语句执行一遍，如果计算结果为false，那就直接跳到while循环的末尾，继续往下执行。其基本结构为：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (条件表达式) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    循环语句&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;do-while循环&#34;&gt;&lt;a href=&#34;#do-while循环&#34; class=&#34;headerlink&#34; title=&#34;do while循环&#34;&gt;&lt;/a&gt;do while循环&lt;/h2&gt;&lt;p&gt;与while循环不同，do while循环则是先执行循环，再判断条件，条件满足时继续循环，条件不满足时退出。它的用法是：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    执行循环语句&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (条件表达式);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;for循环&#34;&gt;&lt;a href=&#34;#for循环&#34; class=&#34;headerlink&#34; title=&#34;for循环&#34;&gt;&lt;/a&gt;for循环&lt;/h2&gt;&lt;p&gt;for循环是我们最常用的一种循环，它使用计数器实现循环。for循环会先初始化计数器，然后，在每次循环前检测循环条件，在每次循环后更新计数器。for循环的用法是：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (初始条件; 循环检测条件; 循环后更新计数器) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 执行语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;for-each循环&#34;&gt;&lt;a href=&#34;#for-each循环&#34; class=&#34;headerlink&#34; title=&#34;for each循环&#34;&gt;&lt;/a&gt;for each循环&lt;/h2&gt;&lt;p&gt;Java还提供了一种for each循环，它可以更简单地遍历数组，和for循环相比，for each循环的变量n不再是计数器，而是直接对应到数组的每个元素。但是，for each循环无法指定遍历顺序，也无法获取数组的索引。它的用法如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] ns = &amp;#123; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;25&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n : ns) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   System.out.println(n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;break和continue&#34;&gt;&lt;a href=&#34;#break和continue&#34; class=&#34;headerlink&#34; title=&#34;break和continue&#34;&gt;&lt;/a&gt;break和continue&lt;/h2&gt;&lt;h2 id=&#34;break&#34;&gt;&lt;a href=&#34;#break&#34; class=&#34;headerlink&#34; title=&#34;break&#34;&gt;&lt;/a&gt;break&lt;/h2&gt;&lt;p&gt;在循环过程中，可以使用break语句跳出当前循环，break会跳出当前循环，当有多个嵌套的循环时，break只能跳出最内层的循环，然后剩下的循环都不会执行了。&lt;/p&gt;
&lt;h2 id=&#34;continue&#34;&gt;&lt;a href=&#34;#continue&#34; class=&#34;headerlink&#34; title=&#34;continue&#34;&gt;&lt;/a&gt;continue&lt;/h2&gt;&lt;p&gt;continue是提前结束本次循环，直接继续执行下次循环,在多层嵌套的循环中，continue语句同样是结束本次自己所在的循环。比如算从1-100的奇数的和时用continue就会很方便：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; sum=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i&amp;lt;=&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(i&amp;amp;==&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sun+=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="blog" />
        <category term="java学习" />
        <category term="java" />
        <updated>2020-10-01T17:45:43.000Z</updated>
    </entry>
    <entry>
        <id>http://yoursite.com/2020/10/01/java%E7%AC%94%E8%AE%B0(%E4%B8%80)/</id>
        <title>java学习笔记（一）</title>
        <link rel="alternate" href="http://yoursite.com/2020/10/01/java%E7%AC%94%E8%AE%B0(%E4%B8%80)/"/>
        <content type="html">&lt;center&gt;&lt;font face=&#34;黑体&#34; size=8&gt; java基本概念 &lt;/font&gt;&lt;/center&gt;

&lt;h2 id=&#34;JVM-JRE与JDK&#34;&gt;&lt;a href=&#34;#JVM-JRE与JDK&#34; class=&#34;headerlink&#34; title=&#34;JVM,JRE与JDK&#34;&gt;&lt;/a&gt;JVM,JRE与JDK&lt;/h2&gt;&lt;p&gt;java语言有一个非常显著的特征就是跨平台性，无论在什么操作系统上，java程序都能够运行，这就得益于java的JVM。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JVM&lt;br&gt;&amp;emsp;java虚拟机，简称JVM(java virtual machine），是运行java程序的假想计算机，是java程序的运行环境，我们编写的java代码，都运行在JVM上。&lt;br&gt;&amp;emsp;JVM为什么能使java具有跨平台性呢？原因就在于每个操作系统都具有一个不同的JVM，这些JVM充当了java程序与操作系统之间的中介，java程序直接运行在JVM中，形成的字节码在转运到操作系统，使得java程序在不同平台不需要重新编译，具有跨平台性。&lt;div align=center&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sunyuzero/cdn/java/java1.png&#34; width=600&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;JRE与JDK&lt;br&gt;&amp;emsp;JRE(Java Runtime Environment），是java程序运行时所需的环境，包括JVM和运行时所需要的核心类库，如果只需要运行java程序的话，那么只需要JRE即可。&lt;br&gt;&amp;emsp;JDK(Java Development Kit），是java程序开发的工具包，包括JRE和开发人员使用的工具，如果需要开发java程序，那么就需要安装JDK了。&lt;br&gt;&amp;emsp;这三者的关系是JDK&amp;gt;JRE&amp;gt;JVM，如下图所示&lt;div align=center&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sunyuzero/cdn/java/java2.png&#34; width=600&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;用cmd运行java程序&#34;&gt;&lt;a href=&#34;#用cmd运行java程序&#34; class=&#34;headerlink&#34; title=&#34;用cmd运行java程序&#34;&gt;&lt;/a&gt;用cmd运行java程序&lt;/h2&gt;&lt;p&gt;首先将cmd定位在java程序所在的文件夹中，然后依次使用javac命令和java命令，javac是对java程序进行编译成class字节码，java命令则是运行编译好的class文件，具体操作如下图所示，其中Test.java是我已经编写好的程序&lt;/p&gt;
&lt;div align=center&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sunyuzero/cdn/java/java3.png&#34; width=600&gt;&lt;/div&gt;

&lt;h2 id=&#34;java程序的注释&#34;&gt;&lt;a href=&#34;#java程序的注释&#34; class=&#34;headerlink&#34; title=&#34;java程序的注释&#34;&gt;&lt;/a&gt;java程序的注释&lt;/h2&gt;&lt;p&gt;java程序的注释与c++类似，有2种注释方法：单行注释和多行注释&lt;br&gt;单行注释：//注释内容，//之后的内容将被计算机忽略&lt;br&gt;多行注释：/* 注释内容，/* */之间的内容将被计算机忽略，可以跨行 */ &lt;/p&gt;
&lt;h2 id=&#34;java关键字和标识符的命名规范&#34;&gt;&lt;a href=&#34;#java关键字和标识符的命名规范&#34; class=&#34;headerlink&#34; title=&#34;java关键字和标识符的命名规范&#34;&gt;&lt;/a&gt;java关键字和标识符的命名规范&lt;/h2&gt;&lt;p&gt;&amp;emsp;和c++语言类似，java也有预先定义的关键字，这些关键字都是全小写，都有特定含义，变量名和类名等都不能与关键字相同。java区分大小写，所以，命名时可以使用标识符的大写，但不建议。&lt;br&gt;&amp;emsp;标识符就是我们自己定义的内容的名称，标识符可以包含英文字母，数字，美元符号$和下划线_,但标识符不能以数字开头&lt;br&gt;建议标识符的命名规范：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类名规范：首字母大写，后面每个单词的首字母大写（大驼峰式）&lt;/li&gt;
&lt;li&gt;变量名规范：首字母小写，后面每个单词首字母大写（小驼峰式）&lt;/li&gt;
&lt;li&gt;方法名规范：同变量名&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常量与变量&#34;&gt;&lt;a href=&#34;#常量与变量&#34; class=&#34;headerlink&#34; title=&#34;常量与变量&#34;&gt;&lt;/a&gt;常量与变量&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;font face=&#34;黑体&#34; size=5&gt;1.常量分为字符串常量，整数常量，浮点数常量，字符常量，布尔常量，空常量，用const修饰&lt;/font&gt;&lt;br&gt;字符串常量：String，以’\0’结束，如”abc”,”123”,占n+1个字节，其中n为组成字符串的字符个数。&lt;br&gt;整数常量：short（2字节），int（4字节），long（8字节）&lt;br&gt;浮点数常量：float（4字节），double（8字节）&lt;br&gt;字符常量：char（1字节）&lt;br&gt;布尔常量：bool（1字节）&lt;br&gt;空常量：null（0字节）&lt;/li&gt;
&lt;li&gt;&lt;font face=&#34;黑体&#34; size=5&gt;2.变量，即可以改变的常量，没有const修饰的常量，其类型与常量相同&lt;/font&gt;&lt;br&gt;变量的使用注意事项：&lt;/li&gt;
&lt;li&gt;如果创建多个变量，变量名不可以重复&lt;/li&gt;
&lt;li&gt;对于float和long类型，字母后缀的F和L不要去掉&lt;/li&gt;
&lt;li&gt;如果使用byte和short类型的变量，右侧的数据值不要超过左侧类型的范围&lt;/li&gt;
&lt;li&gt;一定要对变量赋值后才能使用&lt;/li&gt;
&lt;li&gt;变量使用不能超过作用域&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数据类型转换&#34;&gt;&lt;a href=&#34;#数据类型转换&#34; class=&#34;headerlink&#34; title=&#34;数据类型转换&#34;&gt;&lt;/a&gt;数据类型转换&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;自动类型转换，数据类型从小到大，将会自动发生类型转换。&lt;/li&gt;
&lt;li&gt;强制类型转换，当数据类型从大到小，则需要强制转换，不能自动完成,可能会发生精度损失&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//自动转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a=&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; b=a;  &lt;span class=&#34;comment&#34;&gt;//从int到long，自动转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt; c=&lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; d=c;  &lt;span class=&#34;comment&#34;&gt;//从float到double，自动转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//强制转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; num = &lt;span class=&#34;number&#34;&gt;100L&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//会报错，int无法自动转换为long&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; num = (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;)&lt;span class=&#34;number&#34;&gt;100L&lt;/span&gt;;  &lt;span class=&#34;comment&#34;&gt;//正确，实现了强制转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; s=&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;)s;   &lt;span class=&#34;comment&#34;&gt;//正确，将字符串强制转化成int整数,将会输出a的ASCII码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ASCII码表&#34;&gt;&lt;a href=&#34;#ASCII码表&#34; class=&#34;headerlink&#34; title=&#34;ASCII码表&#34;&gt;&lt;/a&gt;ASCII码表&lt;/h2&gt;&lt;p&gt;ASCII ((American Standard Code for Information Interchange): 美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统标准，ASCII 码也叫基础ASCII码，使用7 位二进制数（剩下的1位二进制为0）来表示所有的大写和小写字母，数字0 到9、标点符号，以及在美式英语中使用的特殊控制字符&lt;/p&gt;
&lt;div align=center&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/sunyuzero/cdn/java/java4.jpg&#34; width=600&gt;&lt;/div&gt;


</content>
        <category term="blog" />
        <category term="java学习" />
        <category term="java" />
        <updated>2020-10-01T05:45:43.000Z</updated>
    </entry>
</feed>
